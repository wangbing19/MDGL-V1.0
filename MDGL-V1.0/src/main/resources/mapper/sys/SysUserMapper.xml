<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.md.sys.dao.sys.SysUserDao">
   
   <!-- 基于用户名查找用户信息 -->
   <select id="findUserByUserName"
           resultType="com.md.sys.entity.sys.SysUser">
      select *
      from sys_users  
      where username=#{username}
   </select>
   
   
   <select id="findObjectByColumn"
           resultType="int">
           select count(*)
           from sys_users
           where ${columnName}=#{columnValue}
   </select>
   
    <update id="updateObject">
        update sys_users
         <set>
             <if test="username!=null and username!=''">
               username=#{username},
             </if>
             <if test="email!=null and email!=''">
                  email=#{email},
             </if>
             <if test="mobile!=null and mobile!=''">
                mobile=#{mobile},
             </if>
             <if test="deptId!=null and deptId!=''">
                deptId=#{deptId},
             </if>
             <if test="modifiedUser!=null and modifiedUser!=''">
                modifiedUser=#{modifiedUser},
             </if>
             modifiedTime=now()
          </set>
        where id=#{id}
    </update>
   
    <!-- 基于用户id查询用户以及用户对应的部门信息 -->
    <select id="findObjectById"
            resultMap="sysUserDeptVO">
            select *
            from sys_users
            where id=#{id}
    </select>
    
    <!-- 保存用户自身信息 -->
    <insert id="insertObject"
            parameterType="com.md.sys.entity.sys.SysUser">
      
      <!-- 通过selectKey获取一个值 
           order表示在insert语句之后执行,
           keyProperty表示将selectKey的结果
                      赋予参数对象的id属性-->
       <selectKey order="AFTER" 
                 resultType="int" 
                 keyProperty="id">
         select last_insert_id()
       </selectKey>
      
      insert into sys_users
      (username,password,deptId,email,mobile,salt,valid,
      createdTime,modifiedTime,createdUser,modifiedUser)
      values
      (#{username},#{password},#{deptId},#{email},#{mobile},#{salt},#{valid},
      now(),now(),#{createdUser},#{modifiedUser})
            
    </insert>

    <!-- 用户的禁用启用 -->
    <update id="validById">
         update sys_users
         set valid=#{valid},
             modifiedUser=#{modifiedUser},
             modifiedTime=now()
         where id=#{id}
    </update>

    <!-- 通过sql元素定义sql语句中的共性 -->
    <sql id="queryWhereId">
        <where><!-- mybatis 中的动态sql -->
             <!--if语句中的username来自于dao方法中使用@Param注解定义的参数-->
            <if test="username!=null and username!=''">
                username like concat("%",#{username},"%")
            </if>
        </where>
    </sql>
    <!-- 依据条件查询总记录数 -->
    <select id="getRowCount" resultType="int">
          select count(*)
          from sys_users
          <include refid="queryWhereId"/>
          <!-- 其中concat函数用于实现字符串连接 -->
    </select>
    
    
    <resultMap type="com.md.sys.vo.sys.SysUserDeptResult" 
               id="sysUserDeptVO">
              <!-- many2one,one2one --> 
              <association property="sysDept"
                           column="deptId"
                           select="com.md.sys.dao.sys.SysDeptDao.findById">
              </association>
    </resultMap>
    <select id="findPageObjects"
            resultMap="sysUserDeptVO">
          select *
          from sys_users
          <include refid="queryWhereId"/>
          order by createdTime desc
          limit #{startIndex},#{pageSize}
          <!--limit 子句为分页查询子句 ，第一个参数代码起始位置-->
    </select>
    
</mapper>



